/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as RoomIndexRouteImport } from './routes/room/index'
import { Route as RoomsIndexRouteImport } from './routes/_rooms/index'
import { Route as RoomIdRouteImport } from './routes/room/$id'

const RoomIndexRoute = RoomIndexRouteImport.update({
  id: '/room/',
  path: '/room/',
  getParentRoute: () => rootRouteImport,
} as any)
const RoomsIndexRoute = RoomsIndexRouteImport.update({
  id: '/_rooms/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const RoomIdRoute = RoomIdRouteImport.update({
  id: '/room/$id',
  path: '/room/$id',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/room/$id': typeof RoomIdRoute
  '/': typeof RoomsIndexRoute
  '/room': typeof RoomIndexRoute
}
export interface FileRoutesByTo {
  '/room/$id': typeof RoomIdRoute
  '/': typeof RoomsIndexRoute
  '/room': typeof RoomIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/room/$id': typeof RoomIdRoute
  '/_rooms/': typeof RoomsIndexRoute
  '/room/': typeof RoomIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/room/$id' | '/' | '/room'
  fileRoutesByTo: FileRoutesByTo
  to: '/room/$id' | '/' | '/room'
  id: '__root__' | '/room/$id' | '/_rooms/' | '/room/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  RoomIdRoute: typeof RoomIdRoute
  RoomsIndexRoute: typeof RoomsIndexRoute
  RoomIndexRoute: typeof RoomIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/room/': {
      id: '/room/'
      path: '/room'
      fullPath: '/room'
      preLoaderRoute: typeof RoomIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_rooms/': {
      id: '/_rooms/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof RoomsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/room/$id': {
      id: '/room/$id'
      path: '/room/$id'
      fullPath: '/room/$id'
      preLoaderRoute: typeof RoomIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  RoomIdRoute: RoomIdRoute,
  RoomsIndexRoute: RoomsIndexRoute,
  RoomIndexRoute: RoomIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
